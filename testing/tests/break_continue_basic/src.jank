#include <put>;
#include <jstring>;
#include <vector>;
#include <iostream>;
#include <assert>;

void test_basic() {
    // simple for break test
    {
        i32 sum = 0;
        for(i32 i = 0; i < 10; i++){
            if(i == 5) break;
            sum += i;
        }
        assert(sum == 10);
    }

    // simple for continue test
    {
        i32 sum = 0;
        for(i32 i = 0; i < 10; i++){
            if(i % 2 == 0) continue;
            sum += i;
        }
        assert(sum == 25);
    }

    // simple while break test
    {
        i32 sum = 0;
        i32 ptr = 0;
        while(ptr < 10) {
            if(ptr == 6) break;
            sum += ptr;
            ptr ++;
        }   
        assert(sum == 15);
    }

    // simple while continue test
    {
        i32 sum = 0;
        i32 ptr = 0;
        while(ptr < 10){
            if(ptr % 2 == 0) {
                ptr ++;
                continue;
            }
            sum += ptr;
            ptr ++;
        }
        assert(sum == 25);
    }

    puts_endl("test basic passed");
}

void test_nested() {
    // continue finds innermost loop
    {
        i32 cnt = 0;
        i32 skipped = 0;
        for(i32 i = 0; i < 10; i++){
            for(i32 j = 0; j < 10; j++){
                if(j == 5) {
                    skipped ++;
                    continue;
                }
                cnt ++;
            }
        }
        assert(cnt == 90);
        assert(skipped == 10);
    }

    puts_endl("test nested passed");
}

i32 main() {

    test_basic();
    test_nested();
    puts_endl("all tests passed");

    return 0;
}