#include <ostream>;

//this error is happening because I first elaborate the expression in the parentheses, 
//and then elaborate it again after putting it into the operator overload. 

//the bottom line is that I only want to elaborate each expression exactly once. 
//perhaps, when I copy expressions, I can also copy over the elaboration state of the expression
//and if I already elaborated it, just skip elaborating instead of throwing an assert. 

//perhaps a more 'correct' approach is to forbid even trying to elaborate an expression twice. 
//but then, I'll have to fix when to elaborate an expression that's going to be put into an overload. 
//this means that I can't pre-elaborate the sub expression as I might have to put it into an overload. 

//perhaps I should also track per expression node if it's been elaborated or not. 

//as of 7/4/2025, I fixed this by waiting to elaborate children until we've found all overloads. 
//Overloads are already elaborating their arguments via emit_asm(). 

i32 main() {

    cout << (1) << "\n";

    return 0;
}