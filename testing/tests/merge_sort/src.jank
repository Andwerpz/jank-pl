#include <jstring>;
#include <put>;

//merge sort
void sort(i32* a, i32 n) {
    if(n == 1) {
        return;
    }
    i32 lsz = n / 2;
    i32 rsz = n - lsz;
    i32* l = (i32*) malloc((u64) lsz * sizeof(i32));
    i32* r = (i32*) malloc((u64) rsz * sizeof(i32));
    for(i32 i = 0; i < lsz; i = i + 1) {
        l[i] = a[i];
    }
    for(i32 i = 0; i < rsz; i = i + 1){
        r[i] = a[i + lsz];
    }
    sort(l, lsz);
    sort(r, rsz);
    i32 lptr = 0;
    i32 rptr = 0;
    for(i32 i = 0; i < n; i = i + 1) {
        if(rptr == rsz) {
            a[i] = l[lptr];
            lptr = lptr + 1;
        }
        else if(lptr == lsz) {
            a[i] = r[rptr];
            rptr = rptr + 1;
        }
        else if(l[lptr] < r[rptr]) {
            a[i] = l[lptr];
            lptr = lptr + 1;
        }
        else {
            a[i] = r[rptr];
            rptr = rptr + 1;
        }
    }
}

i32 main() {
    i32 N = 1000;
    i32* a = (i32*) malloc((u64) N * sizeof(i32));
    
    //pseudorandom array
    {
        i32 mod = 100007;
        i32 ptr = 1;
        i32 mult = 67;
        i32 add = 103;
        for(i32 i = 0; i < N; i = i + 1) {
            ptr = (ptr * mult + add) % mod;
            a[i] = ptr;
        }
    }
    
    sort(a, N);
    for(i32 i = 0; i < N; i = i + 1) {
        puti_endl(a[i]);
    }

    return 0;
}