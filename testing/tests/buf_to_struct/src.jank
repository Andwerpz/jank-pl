#include <jstring>;
#include <put>;
#include <assert>;

struct A {
    i32 x;
    i32 y;

    A() {}
    A(A& other) {}
    ~A() {}
}

struct B {
    i32 x;
    A y;
    i32 z;
    B() {}
    B(B& other) {}
    ~B() {}
}

struct C {
    A x;
    B y;
    i32 z;
    C() {}
    C(C& other) {}
    ~C() {}
}

i32 main() {

    i32 n = $i32 sizeof(C);
    i32* arr = $i32* malloc(sizeof(C));
    puts("sizeof C : ");
    puti_endl(n);
    assert(n % 4 == 0);
    for(i32 i = 0; i < n / 4; i++){
        arr[i] = i;
    }

    C* c = $C* arr;
    assert(c->x.x == 0);
    assert(c->x.y == 1);
    assert(c->y.x == 2);
    assert(c->y.y.x == 3);
    assert(c->y.y.y == 4);
    assert(c->y.z == 5);
    assert(c->z == 6);
    puts_endl("test passed");

    return 0;
}