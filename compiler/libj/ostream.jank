#include <jstring>;

[-2] i32 STDIN = 0;
[-2] i32 STDOUT = 1;
[-2] i32 STDERR = 2;

[-1] ostream cout = new ostream(STDOUT);

struct ostream {
    i32 fd;
    u8* scratch_buf;

    ostream() {
        this.fd = STDOUT;
        this.scratch_buf = $u8* malloc($u64 128);
    }

    ostream(i32 _fd) {
        this.fd = _fd;
        this.scratch_buf = $u8* malloc($u64 128);
    }

    ostream(ostream& other) {
        this.fd = other.fd;
    }

    void write_to_fd(u8* str) {
        sys_write(this.fd, $void* str, strlen(str));
    }
}

ostream& operator<<(ostream& stream, u8* s) {
    stream.write_to_fd(s);
    return stream;
}

ostream& operator<<(ostream& stream, u8 c) {
    u8* str = $u8* malloc($u64 2);
    str[0] = c;
    str[1] = '\0';
    stream.write_to_fd(str);
    return stream;
}

ostream& operator<<(ostream& stream, i32 x) {
    stream.write_to_fd(to_string(x));
    return stream;
}

ostream& operator<<(ostream& stream, u64 x) {
    stream.write_to_fd(to_string(x));
    return stream;
}

ostream& operator<<(ostream& stream, f32 x) {
    stream.write_to_fd(to_string(x));
    return stream;
}
