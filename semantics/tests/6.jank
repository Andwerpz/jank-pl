
//assignment update, sum query segment tree
struct segtree {
    int n;
    int* a;

    segtree segtree() {}
    segtree segtree(int n) {

    }

}

//just a vector<int>
struct vector {
    int sz;
    int cap;
    int* a;

    vector vector() {
        this.sz = 0;
        this.cap = 1;
        this.a = malloc(sizeof(int) * 1);
    }

    vector vector(int n) {
        this.sz = n;
        this.cap = n;
        this.a = malloc(sizeof(int) * n);
        for(int i = 0; i < n; i = i + 1) this.a[i] = 0;
    }

    void pop_back() {
        if(this.sz == 0) return;
        this.sz = this.sz - 1;
    }

    void push_back(int x) {
        if(this.sz == this.cap) this.grow();
        this.a[this.sz] = x;
        this.sz = this.sz + 1;
    }

    void grow() {
        this.cap = this.cap * 2;
        int* na = malloc(sizeof(int) * this.cap);
        for(int i = 0; i < this.sz; i = i + 1) {
            na[i] = this.a[i];
        }
        this.a = na;

        puts("grow : ");
        puti_endl(this.cap);
    }

    int at(int ind) {
        return this.a[ind];
    }
}

void vector_test() {
    vector a = vector();
    for(int i = 0; i < 1000000; i = i + 1) {
        a.push_back(i);
    }
}

int main() {

    vector_test();

    return 0;
}